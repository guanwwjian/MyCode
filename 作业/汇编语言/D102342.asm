SSEG SEGMENT STACK
	STACK DW 100 DUP(?)
	TOS DW 0
SSEG ENDS

DSEG SEGMENT
	NUM DB '0','1','2','3','4','5','6','7','8','9'
	TAB DW 48 DUP(0),10 DUP(1),7 DUP(0),26 DUP(2),6 DUP(0),26 DUP(2),133 DUP(0)
	DATA DW 3 DUP(0)
	ANS DB 10 DUP('$')
DSEG ENDS

ESEG SEGMENT

ESEG ENDS

CSEG SEGMENT
	ASSUME SS:SSEG,CS:CSEG,ES:ESEG,DS:DSEG
COUT PROC
WHILE2:	MOV DX, 0
	MOV CX, 10
	DIV CX
	PUSH BX
	MOV BX, DX
	MOV CL, NUM[BX]
	POP BX
	MOV ANS[BX], CL
	INC BX
	CMP AX, 0
	JNZ WHILE2
WHILE3:	DEC BX
	MOV AH, 2
	MOV DL, ANS[BX]
	INT 21H
	CMP BX, 0
	JNZ WHILE3
	MOV AH, 2
	MOV DL, 13
	INT 21H
	MOV AH, 2
	MOV DL, 10
	INT 21H
	RET
COUT ENDP
MAIN PROC FAR
	MOV AX, SSEG
	MOV SS, AX
	LEA SP, TOS
	PUSH DS
	XOR AX,AX
	PUSH AX
	MOV AX, DSEG
	MOV DS, AX
	MOV AX, ESEG
	MOV ES, AX

WHILE1:	MOV AH, 1
	INT 21H
	CMP AL, 13
	JE BREAK1
	MOV BX, 0
	MOV BL, AL
	SHL BX, 1
	MOV BX, TAB[BX]
	SHL BX, 1
	MOV AX, DATA[BX]
	INC AX
	MOV DATA[BX], AX
	JMP WHILE1
BREAK1:	
	MOV AH, 2
	MOV DL, 13
	INT 21H
	MOV AH, 2
	MOV DL, 10
	INT 21H
	MOV AX, DATA[2]
	CALL COUT
	MOV AX, DATA[4]
	CALL COUT
	MOV AX, DATA[0]
	CALL COUT
	RET
MAIN ENDP


CSEG ENDS
	END MAIN